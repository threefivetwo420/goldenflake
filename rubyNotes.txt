

https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md#ruby



    expression if boolean
        puts "shortIf" if true
        #next example
    boolean ? Do this if true: Do this if false 



                Example class code
                
                
                    class NumData
                      numAry = Array.new
                        @@ranNum = rand(20)
                      @@countr = 0
                      @@dataNum 
                      @@dataNumRT


                      def self.ranNumr
                        @@ranNum
                      end
                      def self.count
                        @@countr
                      end
                      def self.dataCast
                        @@dataNum = rand(6)
                      end
                      def self.dataNumRT
                        @@dataNumRT
                        end
                    end





                    class NumberFill

                      @@rNums
                      def self.aryData 
                        @@rNums
                      end	
                        def numberGen() 
                      puts "this is #{NumData.ranNumr}"
                      @@rNums = Array.new(NumData.ranNumr)
                      puts  "this is array #{@@rNums}"
                     # rNums.each { |x| 
                        #newV = NumData.count + 1
                        #print rNums
                        #}
                        end

                      def arrayFill()
                      end 

                    end
                      object = NumberFill. new
                    object.numberGen()

                    #so now the function will need to fill up the @@rNums[@@ranNum - 1] with random long float, symbol:, Strings, boolean, big integer, file.

                    # so this would basically use a genrated random number to set off different function for a type of data to be stored in the array



                    puts "\n\n dataCast \n ------- \n Try1 :#{NumData.dataCast} \n Try2: #{NumData.dataCast} \n Try3: #{NumData.dataCast} \n Try4: #{NumData.dataCast} \n Try5: #{NumData.dataCast} \n Try6: #{NumData.dataCast} \n"


                    #object = NumData. new
                    #object.dataCast()

                    #define 0=longfloat 
                      #length of array is loopStop??
                        #array index ranNumr - 1
                      def writeInData(integer,countr,loopStop)
                        while countr <= loopStop	
                        if	integer == 0 
                          NumberFill.aryData[countr] = rand()
                          puts "#{NumberFill.aryData}"
                          countr = countr + 1
                        end
                         if 
                           #countr would have to increase outisde of the writeInData() so that the index would not be messed with
                         end
                      end

                        writeInData(NumData.dataCast,NumData.count)


                        #writeInData would need to write the data into the array which was made with a random amount of index, write in data would only have 6 if clauses because the 6 data types would be run a random amount of times which would write all 6 data types possible to every index in the array. the control for the loop is stopping at random number - 1 and is starting at 0 so 0 is being checked against random number - 1 while counter 0 <= rn -1 then the loop will continue checking each randomly generated data type 1-6 or 0-5 should it be rand(5) + 1 since this is 1-6 no zero to avoid an empty array, like wise the rand(19) + 1 should be added as well to remove the 0 from the array possibilities. So what goes into the function is random number - 1, counter=0, data type random number. at the end of the while loop since it runs until counter is greater than random number - 1 meanwhile indexing the array, which won't quite set a new value for the incoming random data type. so the other variable should be handled outside of the loop where, when the while loop starts it should test the incoming data but also set off a new random number.  

    #so if countrFake != countr && integer == dataRan 
    	#run the new dataRan function
    #this should be run on one line
    
    #so if 0 == countr Do dataRan function




        Conditional Assignment Operator
                ||=
                which will assign a value only if a value has not already been assigned to a variable
                


           Assignment Operators
                && for both condition to be true
                || for one or the other other to be true





using the .upto .downto functions or loops

        exmaple 
            95.upto


https://arxiv.org/
https://arxiv.org/abs/0805.1079?context=physics
https://phet.colorado.edu/en/simulations/category/physics/electricity-magnets-and-circuits


10 volt battery 

http://cse.unl.edu/~lksoh/Classes/CSCE155N_Fall16/handouts/HistoryComputing.pdf

 Atanasoff's design utilized capacitors

http://www.columbia.edu/~td2177/JVAtanasoff/JVAtanasoff.html

http://ds-wordpress.haverford.edu/bitbybit/bit-by-bit-contents/chapter-four/4-6-the-atanasoff-berry-computer/

Atanasoff had decided to become a theoretical physicist. But the physics program at the University of Florida in Gainesville

could store 30 5 bit numbers 

00000 30 times

lacked a processor?

http://www.columbia.edu/cu/computinghistory/eniac.html

https://www.ams.org/home/page

https://www.ams.org/journals/mcom/1946-02-015/S0025-5718-1946-0018977-0/S0025-5718-1946-0018977-0.pdf

microsecond = 1/1000000

4.
The simplest tube used is the triode, so called because it has three characteristic
elements: the cathode (surface which gives off electrons), the
plate (surface which receives electrons), and the grid (which controls the
current passing through the tube). In addition, there is a heater to bring
the cathode to the temperature required for it to emit electrons. Other tubes
used in the ENIAC are multi-grid tubes, for example, the pentode which
has 3 grids.



coaxial cables have four primary electrical constants, RLGC
resistance in ohms, inductance in henries, conductance in mhos, and C in Farads

https://books.google.com/books?id=W9zcBwAAQBAJ&pg=PA8&lpg=PA8&dq=trunk+lines+network&source=bl&ots=g_UMLHZt0b&sig=ACfU3U0OIdI-n7iJgII2tu-YKspxamtToQ&hl=en&sa=X&ved=2ahUKEwjMu47Xhf3gAhVineAKHc5zDeA4FBDoATAKegQIAxAB#v=onepage&q=trunk%20lines%20network&f=false

https://ftp.arl.army.mil/mike/comphist/46eniac-report/chap1.html

http://web.mst.edu/~kosbar/ee3430/ff/transmissionlines/example_twistedpair/sines/index.html

100 kc sine waves

https://www.utdallas.edu/~metin/Merit/Folios/refine.pdf <-

how hot is a lighter

order of one line if statement matters


experssion if boolean

puts "It's true!" if true    # is acceptable, correct

if true puts "It's true!"    # may not be done


.upto nd .downto functions


example 95.upto(100) { |num| print num, " " } 
	# Prints 95 96 97 98 99 100

could even do so with letters

"L".upto("P") { |x| puts x}



Call and Response

.respond_to? takes a symbol and returns true if an object can receive that 

method and false otherwise

Example
	[1,2,3].respond_to?(:push)  # would return true since you can call 

push on an array object

however 
	[1,2,3].respond_to?(:to_sym) would return false since you can't 

turn an array into a symbol

basically will that function execute


.push adds an element to the end of an array, so does the << concatenation 

operator

[1,2,3] << 4
# ==> [1,2,3,4]

works on strings as well 

String interpolation

+ and << can be used to add a variable value into a string but it is more 

complicated than string interpolation

example

varibale = "north"

"The king in the #{variable}!"


"king in the #{variable}!"


Ternary Operator 

puts three == 3 ? "Of course." : "commentorwhatevr4else"

case do statement



https://images.theweek.com/sites/default/files/10_224019.jpg?resize=807x807

https://images.theweek.com/sites/default/files/81_224063.jpg?resize=807x807

https://images.theweek.com/sites/default/files/136_223980.jpg?resize=807x807


https://scifi.stackexchange.com/questions/34612/reading-order-of-a-song-of-ice-and-fire

https://static.boredpanda.com/blog/wp-content/uploads/2019/04/season-8-premiere-game-of-thrones-got-memes-4-5cb58ca64d385__700.jpg


https://melmagazine.com/wp-content/uploads/2019/04/Screen-Shot-2019-04-18-at-12.52.38-PM.png

https://melmagazine.com/wp-content/uploads/2019/04/4uw5odc9jfp01.jpg

http://media.slaplaughter.danoah.com/wp-content/uploads/20171212180613/1-Hang-in-there-660x750.jpg

